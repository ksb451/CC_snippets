<snippet>
	<content><![CDATA[
struct FenTree {
    vector<int> bit;  // binary indexed tree
    int n;

    FenTree(int n) {
        this->n = n;
        bit.assign(n, 0);
    }

    FenTree(vector<int> a) : FenTree(a.size()) {
        for (size_t i = 0; i < a.size(); i++)
            add(i, a[i]);
    }

    int sum(int r) {
        int ret = 0;
        for (; r >= 0; r = (r & (r + 1)) - 1)
            ret += bit[r];
        return ret;
    }

    int sum(int l, int r) {
        return sum(r) - sum(l - 1);
    }

    void add(int idx, int delta) {
        for (; idx < n; idx = idx | (idx + 1))
            bit[idx] += delta;
    }
};

ll count_inv(vector<int>&per)
{
	ll n = per.size();
	FenTree BIT(n);
	ll ans=0;
	for(int i=0;i<n;i++)
	{
		BIT.add(per[i],1);
		ll sum  = BIT.sum(per[i]);
		ans += (i+1-sum);
	}
	return ans;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>inversions</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>